// Generated by view binder compiler. Do not edit!
package personal.droid.pychat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import personal.droid.pychat.R;

public final class ItemContactNumberBinding implements ViewBinding {
  @NonNull
  private final RelativeLayout rootView;

  @NonNull
  public final ImageView phoneCall;

  @NonNull
  public final TextView phoneNumber;

  @NonNull
  public final TextView phoneType;

  private ItemContactNumberBinding(@NonNull RelativeLayout rootView, @NonNull ImageView phoneCall,
      @NonNull TextView phoneNumber, @NonNull TextView phoneType) {
    this.rootView = rootView;
    this.phoneCall = phoneCall;
    this.phoneNumber = phoneNumber;
    this.phoneType = phoneType;
  }

  @Override
  @NonNull
  public RelativeLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemContactNumberBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemContactNumberBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_contact_number, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemContactNumberBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      ImageView phoneCall = rootView.findViewById(R.id.phoneCall);
      if (phoneCall == null) {
        missingId = "phoneCall";
        break missingId;
      }
      TextView phoneNumber = rootView.findViewById(R.id.phoneNumber);
      if (phoneNumber == null) {
        missingId = "phoneNumber";
        break missingId;
      }
      TextView phoneType = rootView.findViewById(R.id.phoneType);
      if (phoneType == null) {
        missingId = "phoneType";
        break missingId;
      }
      return new ItemContactNumberBinding((RelativeLayout) rootView, phoneCall, phoneNumber,
          phoneType);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
