// Generated by view binder compiler. Do not edit!
package personal.droid.pychat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.RelativeLayout;
import android.widget.TableLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.Toolbar;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import com.vanniktech.emoji.EmojiEditText;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import personal.droid.pychat.R;

public final class ActivityChatsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView_;

  @NonNull
  public final ImageView addAttachment;

  @NonNull
  public final TableLayout addAttachmentLayout;

  @NonNull
  public final TextView attachmentAudio;

  @NonNull
  public final TextView attachmentContact;

  @NonNull
  public final TextView attachmentDocument;

  @NonNull
  public final ImageView attachmentEmoji;

  @NonNull
  public final TextView attachmentGallery;

  @NonNull
  public final TextView attachmentLocation;

  @NonNull
  public final TextView attachmentVideo;

  @NonNull
  public final ImageView backButton;

  @NonNull
  public final ImageView callAudio;

  @NonNull
  public final ImageView callVideo;

  @NonNull
  public final Toolbar chatToolbar;

  @NonNull
  public final RelativeLayout chatToolbarContent;

  @NonNull
  public final TextView emotion;

  @NonNull
  public final EmojiEditText newMessage;

  @NonNull
  public final RecyclerView recyclerView;

  @NonNull
  public final LinearLayout rootView;

  @NonNull
  public final TextView selectedCount;

  @NonNull
  public final ImageView send;

  @NonNull
  public final LinearLayout sendContainer;

  @NonNull
  public final TextView userName;

  @NonNull
  public final CircleImageView usersImage;

  private ActivityChatsBinding(@NonNull LinearLayout rootView_, @NonNull ImageView addAttachment,
      @NonNull TableLayout addAttachmentLayout, @NonNull TextView attachmentAudio,
      @NonNull TextView attachmentContact, @NonNull TextView attachmentDocument,
      @NonNull ImageView attachmentEmoji, @NonNull TextView attachmentGallery,
      @NonNull TextView attachmentLocation, @NonNull TextView attachmentVideo,
      @NonNull ImageView backButton, @NonNull ImageView callAudio, @NonNull ImageView callVideo,
      @NonNull Toolbar chatToolbar, @NonNull RelativeLayout chatToolbarContent,
      @NonNull TextView emotion, @NonNull EmojiEditText newMessage,
      @NonNull RecyclerView recyclerView, @NonNull LinearLayout rootView,
      @NonNull TextView selectedCount, @NonNull ImageView send, @NonNull LinearLayout sendContainer,
      @NonNull TextView userName, @NonNull CircleImageView usersImage) {
    this.rootView_ = rootView_;
    this.addAttachment = addAttachment;
    this.addAttachmentLayout = addAttachmentLayout;
    this.attachmentAudio = attachmentAudio;
    this.attachmentContact = attachmentContact;
    this.attachmentDocument = attachmentDocument;
    this.attachmentEmoji = attachmentEmoji;
    this.attachmentGallery = attachmentGallery;
    this.attachmentLocation = attachmentLocation;
    this.attachmentVideo = attachmentVideo;
    this.backButton = backButton;
    this.callAudio = callAudio;
    this.callVideo = callVideo;
    this.chatToolbar = chatToolbar;
    this.chatToolbarContent = chatToolbarContent;
    this.emotion = emotion;
    this.newMessage = newMessage;
    this.recyclerView = recyclerView;
    this.rootView = rootView;
    this.selectedCount = selectedCount;
    this.send = send;
    this.sendContainer = sendContainer;
    this.userName = userName;
    this.usersImage = usersImage;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView_;
  }

  @NonNull
  public static ActivityChatsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ActivityChatsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.activity_chats, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ActivityChatsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      ImageView addAttachment = rootView.findViewById(R.id.add_attachment);
      if (addAttachment == null) {
        missingId = "addAttachment";
        break missingId;
      }
      TableLayout addAttachmentLayout = rootView.findViewById(R.id.add_attachment_layout);
      if (addAttachmentLayout == null) {
        missingId = "addAttachmentLayout";
        break missingId;
      }
      TextView attachmentAudio = rootView.findViewById(R.id.attachment_audio);
      if (attachmentAudio == null) {
        missingId = "attachmentAudio";
        break missingId;
      }
      TextView attachmentContact = rootView.findViewById(R.id.attachment_contact);
      if (attachmentContact == null) {
        missingId = "attachmentContact";
        break missingId;
      }
      TextView attachmentDocument = rootView.findViewById(R.id.attachment_document);
      if (attachmentDocument == null) {
        missingId = "attachmentDocument";
        break missingId;
      }
      ImageView attachmentEmoji = rootView.findViewById(R.id.attachment_emoji);
      if (attachmentEmoji == null) {
        missingId = "attachmentEmoji";
        break missingId;
      }
      TextView attachmentGallery = rootView.findViewById(R.id.attachment_gallery);
      if (attachmentGallery == null) {
        missingId = "attachmentGallery";
        break missingId;
      }
      TextView attachmentLocation = rootView.findViewById(R.id.attachment_location);
      if (attachmentLocation == null) {
        missingId = "attachmentLocation";
        break missingId;
      }
      TextView attachmentVideo = rootView.findViewById(R.id.attachment_video);
      if (attachmentVideo == null) {
        missingId = "attachmentVideo";
        break missingId;
      }
      ImageView backButton = rootView.findViewById(R.id.back_button);
      if (backButton == null) {
        missingId = "backButton";
        break missingId;
      }
      ImageView callAudio = rootView.findViewById(R.id.callAudio);
      if (callAudio == null) {
        missingId = "callAudio";
        break missingId;
      }
      ImageView callVideo = rootView.findViewById(R.id.callVideo);
      if (callVideo == null) {
        missingId = "callVideo";
        break missingId;
      }
      Toolbar chatToolbar = rootView.findViewById(R.id.chatToolbar);
      if (chatToolbar == null) {
        missingId = "chatToolbar";
        break missingId;
      }
      RelativeLayout chatToolbarContent = rootView.findViewById(R.id.chatToolbarContent);
      if (chatToolbarContent == null) {
        missingId = "chatToolbarContent";
        break missingId;
      }
      TextView emotion = rootView.findViewById(R.id.emotion);
      if (emotion == null) {
        missingId = "emotion";
        break missingId;
      }
      EmojiEditText newMessage = rootView.findViewById(R.id.new_message);
      if (newMessage == null) {
        missingId = "newMessage";
        break missingId;
      }
      RecyclerView recyclerView = rootView.findViewById(R.id.recycler_view);
      if (recyclerView == null) {
        missingId = "recyclerView";
        break missingId;
      }
      LinearLayout rootView_ = rootView.findViewById(R.id.rootView);
      if (rootView_ == null) {
        missingId = "rootView";
        break missingId;
      }
      TextView selectedCount = rootView.findViewById(R.id.selectedCount);
      if (selectedCount == null) {
        missingId = "selectedCount";
        break missingId;
      }
      ImageView send = rootView.findViewById(R.id.send);
      if (send == null) {
        missingId = "send";
        break missingId;
      }
      LinearLayout sendContainer = rootView.findViewById(R.id.sendContainer);
      if (sendContainer == null) {
        missingId = "sendContainer";
        break missingId;
      }
      TextView userName = rootView.findViewById(R.id.user_name);
      if (userName == null) {
        missingId = "userName";
        break missingId;
      }
      CircleImageView usersImage = rootView.findViewById(R.id.users_image);
      if (usersImage == null) {
        missingId = "usersImage";
        break missingId;
      }
      return new ActivityChatsBinding((LinearLayout) rootView, addAttachment, addAttachmentLayout,
          attachmentAudio, attachmentContact, attachmentDocument, attachmentEmoji,
          attachmentGallery, attachmentLocation, attachmentVideo, backButton, callAudio, callVideo,
          chatToolbar, chatToolbarContent, emotion, newMessage, recyclerView, rootView_,
          selectedCount, send, sendContainer, userName, usersImage);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
