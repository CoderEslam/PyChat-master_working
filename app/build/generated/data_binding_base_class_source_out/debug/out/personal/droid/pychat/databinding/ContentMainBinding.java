// Generated by view binder compiler. Do not edit!
package personal.droid.pychat.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.RelativeLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import com.google.android.material.floatingactionbutton.FloatingActionButton;
import com.google.android.material.tabs.TabLayout;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import personal.droid.pychat.R;
import personal.droid.pychat.views.SwipeControlViewPager;

public final class ContentMainBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final ImageView actionDelete;

  @NonNull
  public final FloatingActionButton addConversation;

  @NonNull
  public final ImageView backButton;

  @NonNull
  public final RelativeLayout cabContainer;

  @NonNull
  public final TextView selectedCount;

  @NonNull
  public final TabLayout tabLayout;

  @NonNull
  public final RelativeLayout toolbarContainer;

  @NonNull
  public final CircleImageView usersImage;

  @NonNull
  public final SwipeControlViewPager viewPager;

  private ContentMainBinding(@NonNull FrameLayout rootView, @NonNull ImageView actionDelete,
      @NonNull FloatingActionButton addConversation, @NonNull ImageView backButton,
      @NonNull RelativeLayout cabContainer, @NonNull TextView selectedCount,
      @NonNull TabLayout tabLayout, @NonNull RelativeLayout toolbarContainer,
      @NonNull CircleImageView usersImage, @NonNull SwipeControlViewPager viewPager) {
    this.rootView = rootView;
    this.actionDelete = actionDelete;
    this.addConversation = addConversation;
    this.backButton = backButton;
    this.cabContainer = cabContainer;
    this.selectedCount = selectedCount;
    this.tabLayout = tabLayout;
    this.toolbarContainer = toolbarContainer;
    this.usersImage = usersImage;
    this.viewPager = viewPager;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ContentMainBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ContentMainBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.content_main, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ContentMainBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    String missingId;
    missingId: {
      ImageView actionDelete = rootView.findViewById(R.id.action_delete);
      if (actionDelete == null) {
        missingId = "actionDelete";
        break missingId;
      }
      FloatingActionButton addConversation = rootView.findViewById(R.id.addConversation);
      if (addConversation == null) {
        missingId = "addConversation";
        break missingId;
      }
      ImageView backButton = rootView.findViewById(R.id.back_button);
      if (backButton == null) {
        missingId = "backButton";
        break missingId;
      }
      RelativeLayout cabContainer = rootView.findViewById(R.id.cabContainer);
      if (cabContainer == null) {
        missingId = "cabContainer";
        break missingId;
      }
      TextView selectedCount = rootView.findViewById(R.id.selectedCount);
      if (selectedCount == null) {
        missingId = "selectedCount";
        break missingId;
      }
      TabLayout tabLayout = rootView.findViewById(R.id.tabLayout);
      if (tabLayout == null) {
        missingId = "tabLayout";
        break missingId;
      }
      RelativeLayout toolbarContainer = rootView.findViewById(R.id.toolbarContainer);
      if (toolbarContainer == null) {
        missingId = "toolbarContainer";
        break missingId;
      }
      CircleImageView usersImage = rootView.findViewById(R.id.users_image);
      if (usersImage == null) {
        missingId = "usersImage";
        break missingId;
      }
      SwipeControlViewPager viewPager = rootView.findViewById(R.id.viewPager);
      if (viewPager == null) {
        missingId = "viewPager";
        break missingId;
      }
      return new ContentMainBinding((FrameLayout) rootView, actionDelete, addConversation,
          backButton, cabContainer, selectedCount, tabLayout, toolbarContainer, usersImage,
          viewPager);
    }
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
